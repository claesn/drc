<!-- DRC build script -->
<project name="drc" default="all" basedir=".">

	<!-- Folders: the project setup -->
	<property name="build.dir" location="build" />
	<property name="lib.dir" location="lib" />
	<property name="deploy.dir.root" location="../de.uni_koeln.ub.drc.ui/" />
	<property name="deploy.dir.lib" location="${deploy.dir.root}/lib" />
	<property name="deploy.dir.data" location="${deploy.dir.root}/pages" />
	<!-- Currently working with volume 4 only: -->
	<property name="src.dir.data" location="res/rom/PPN345572629_0004" />

	<!-- Java-specific properties: -->
	<property name="build.prod.dir.java" location="${build.dir}/classes/java/prod" />
	<property name="build.test.dir.java" location="${build.dir}/classes/java/test" />
	<property name="build.dist.dir.java" location="${build.dir}/dist" />
	<property name="doc.dir.java" location="${build.dir}/doc-gen/javadoc" />
	<property name="src.dir.java" location="src/java" />
	<property name="test.dir.java" location="src/tests" />
	<property name="reports.dir.java" location="${build.dir}/tests/java/reports" />
	<property name="summary.dir.java" location="${build.dir}/tests/java/summary" />

	<!-- Scala-specific properties: -->
	<property name="build.prod.dir.scala" location="${build.dir}/classes/scala/prod" />
	<property name="build.test.dir.scala" location="${build.dir}/classes/scala/test" />
	<property name="build.dist.dir.scala" location="lib" />
	<property name="doc.dir.scala" location="${build.dir}/doc-gen/scaladoc" />
	<property name="src.dir.scala" location="src/scala" />
	<property name="test.dir.scala" location="src/specs" />
	<property name="reports.dir.scala" location="${build.dir}/tests/scala" />

	<!-- Java version config: -->
	<property name="ant.java.version" value="1.5" />

	<!-- Scala Ant tasks: -->
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${lib.dir}/scala-compiler.jar" />
			<pathelement location="${lib.dir}/scala-library.jar" />
		</classpath>
	</taskdef>

	<!-- The classpath: where the classes are to be found -->
	<path id="project.classpath">
		<pathelement location="${build.prod.dir.java}" />
		<pathelement location="${build.test.dir.java}" />
		<pathelement location="${build.prod.dir.scala}" />
		<pathelement location="${build.test.dir.scala}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- The main target to do all work -->
	<target name="all" depends="clean, deploy, doc, test-report, deploy-data" />

	<!-- Prepare the build: create folders -->
	<target name="prepare">
		<mkdir dir="${build.prod.dir.java}" />
		<mkdir dir="${build.test.dir.java}" />
		<mkdir dir="${build.prod.dir.scala}" />
		<mkdir dir="${build.test.dir.scala}" />
		<mkdir dir="${doc.dir.scala}" />
		<mkdir dir="${build.dist.dir.java}" />
		<mkdir dir="${build.dist.dir.scala}" />
		<mkdir dir="${reports.dir.java}" />
		<mkdir dir="${summary.dir.java}" />
		<mkdir dir="${reports.dir.scala}" />
	</target>

	<!-- Delete the generated files -->
	<target name="clean">
		<delete includeemptydirs="true" failonerror="no">
			<fileset dir="${build.dir}" includes="**/*" />
			<fileset dir="${reports.dir.java}" includes="**/*" />
			<fileset dir="${summary.dir.java}" includes="**/*" />
			<fileset dir="${doc.dir.java}" includes="**/*" />
			<fileset dir="${doc.dir.scala}" includes="**/*" />
			<fileset dir="${reports.dir.scala}" includes="**/*" />
		</delete>
	</target>

	<!-- Compile normal sources -->
	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir.java}" destdir="${build.prod.dir.java}">
			<classpath refid="project.classpath" />
		</javac>
		<!-- Copy resources to be in classpath -->
		<copy todir="${build.prod.dir.java}">
			<fileset dir="${src.dir.java}" excludes="**/*.java" />
		</copy>

		<scalac srcdir="${src.dir.scala}" deprecation="on" destdir="${build.prod.dir.scala}" classpathref="project.classpath">
			<include name="**/*.scala"   />
		</scalac>
		<!-- Copy resources to be in classpath -->
		<copy todir="${build.prod.dir.scala}">
			<fileset dir="${src.dir.scala}" excludes="**/*.scala" />
		</copy>

	</target>

	<!-- Compile test sources -->
	<target name="compile-tests" depends="compile">
		<javac srcdir="${test.dir.java}" destdir="${build.test.dir.java}">
			<classpath refid="project.classpath" />
		</javac>

		<scalac srcdir="${test.dir.scala}" deprecation="on" destdir="${build.test.dir.scala}" classpathref="project.classpath">
			<include name="**/*.scala"   />
		</scalac>
	</target>

	<!-- Build a distribution jar-->
	<target name="jar" depends="compile">
		<jar destfile="${build.dist.dir.java}/drc-java.jar" basedir="${build.prod.dir.java}">
		</jar>
		<jar destfile="${build.dist.dir.scala}/drc-scala.jar" basedir="${build.prod.dir.scala}">
		</jar>
	</target>

	<!-- Deploy our jar and the libraries -->
	<target name="deploy" depends="jar">
		<copy todir="${deploy.dir.lib}">
			<!-- deploy our jars -->
			<fileset dir="${build.dist.dir.java}" casesensitive="yes">
				<include name="*.jar" />
			</fileset>
			<!-- deploy required jars (only top level jars) -->
			<fileset dir="${lib.dir}" casesensitive="yes">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>
	
	<target name="deploy-data">
	  <copy todir="${deploy.dir.data}">
	    <!-- Files copied here are currently generated during test run -->
	    <fileset dir="${src.dir.data}" includes="**/PPN*_*-*.xml" />
	  </copy>
	</target>

	<!-- Run the tests -->
	<target name="test" depends="compile-tests">
		<junit haltonfailure="yes" printsummary="true">
			<classpath refid="project.classpath" />
			<batchtest todir="${reports.dir.java}">
				<formatter type="xml" />
				<!--We run only the suites containing 'Exercise' in their name-->
				<fileset dir="${build.test.dir.java}" includes="**/*Test*.class" />
			</batchtest>
		</junit>
		<!-- Run the Scala specs by running the application that runs individual specs: -->
		<java classname="de.uni_koeln.ub.drc.SpecRunner" classpathref="project.classpath">
		</java>
	</target>

	<!-- Report the tests -->
	<target name="test-report" depends="test">
		<!-- collect the results into a summary report -->
		<junitreport todir="${summary.dir.java}">
			<fileset dir="${reports.dir.java}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${summary.dir.java}" />
		</junitreport>
		<echo message="Wrote summary test report to: ${summary.dir.java}" />
	</target>
	
	<!-- Generate javadoc and scaladoc documentation-->
	<target name="doc" depends="prepare">
		<!-- the classpathref is an important detail here; without it we hit this bug: 
	        http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6442982 -->
		<javadoc classpathref="project.classpath" packagenames="de.uni_koeln.ub.drc.*" sourcepath="${src.dir.java}" destdir="${doc.dir.java}">
		</javadoc>
		<scaladoc srcdir="${src.dir.scala}" destdir="${doc.dir.scala}" deprecation="yes" unchecked="yes" doctitle="DRC Scala API" classpathref="project.classpath">
			<include name="**/*.scala" />
		</scaladoc>
	</target>

</project>
